Представления списков и строковые методы: часть 2

В этом задании используйте представления списков и/или строковые методы

  =========================

Из сборника упражнений Стивенсона решить следующие номера:

	= 84 = для генерации случайного выбора из двух элементов используйте функцию choice из модуля random:
             from random import choice
             choice(('О', 'Р'))

    = 133 = без функции
            входные списки получайте из пользовательского ввода
            True или False выводите в консоль



  ==========  3  ==========

Напишите программу, которая преобразовывает числа из произвольной системы счисления (с основанием от 2 до 9) в десятичную.

Программа работает в цикле, пока не получит на вход пустую строку.
Принимает на вход одной строкой число и через пробел основание системы счисления, в которой записано это число.
Для каждого введённого числа выводит результат преобразования в десятичную.



  ==========  4  ========== тут должна быть змейка

Напишите программу, которая частично проверяет корректность синтаксиса переданной строки кода на языке LISP

Выражения на языке программирования LISP записываются в круглых, квадратных и фигурных скобках.

Проверить:
    – выражение не может начинаться с закрывающей скобки
    – каждая открытая скобка должна быть закрыта
    – должна быть быть соблюдена вложенность выражений

Пример ввода 1:
    (for-loop [i 0 (< i 10) (inc i)] (println i))

Пример вывода 1:
    True

Пример ввода 2:
    ((if [a >) 1] println var)
Пример вывода 1:
    False



  =========================

Код каждой решённой задачи помещается в текущий каталог репозитория в виде отдельного файла с именем, соответствующем номеру задачи.

Все файлы выполняются с помощью интерпретатора.
Текстовый вывод в стандартный поток stdout копируется.
Копия вывода в виде комментария помещается в конец файла с кодом задачи.

В сервис Журнал отправляется сообщение о выполнении задания со ссылкой на репозиторий.

Преподаватель пишет комментарии и правки в коде задач и обновляет файлы в удалённом репозитории.
Проверяйте обновления в своём репозитории каждый день.